// generated by Fast Light User Interface Designer (fluid) version 1.0303

#include "../include/WC_MainWindow.h"

void EE698K::GUI::WC_MainWindow::cb_Open_i(Fl_Menu_*, void*) {
  WOpen_cb();
}
void EE698K::GUI::WC_MainWindow::cb_Open(Fl_Menu_* o, void* v) {
  ((EE698K::GUI::WC_MainWindow*)(o->parent()))->cb_Open_i(o,v);
}

void EE698K::GUI::WC_MainWindow::cb_Load_i(Fl_Menu_*, void*) {
  WLoadPoints_cb();
}
void EE698K::GUI::WC_MainWindow::cb_Load(Fl_Menu_* o, void* v) {
  ((EE698K::GUI::WC_MainWindow*)(o->parent()))->cb_Load_i(o,v);
}

void EE698K::GUI::WC_MainWindow::cb_Save_i(Fl_Menu_*, void*) {
  WSavePoints_cb();
}
void EE698K::GUI::WC_MainWindow::cb_Save(Fl_Menu_* o, void* v) {
  ((EE698K::GUI::WC_MainWindow*)(o->parent()))->cb_Save_i(o,v);
}

void EE698K::GUI::WC_MainWindow::cb_Quit_i(Fl_Menu_*, void*) {
  WQuit_cb();
}
void EE698K::GUI::WC_MainWindow::cb_Quit(Fl_Menu_* o, void* v) {
  ((EE698K::GUI::WC_MainWindow*)(o->parent()))->cb_Quit_i(o,v);
}

void EE698K::GUI::WC_MainWindow::cb_Inpaint_i(Fl_Menu_*, void*) {
  WInpaint_cb();
}
void EE698K::GUI::WC_MainWindow::cb_Inpaint(Fl_Menu_* o, void* v) {
  ((EE698K::GUI::WC_MainWindow*)(o->parent()))->cb_Inpaint_i(o,v);
}

void EE698K::GUI::WC_MainWindow::cb_small_i(Fl_Menu_*, void*) {
  WSmall_cb();
}
void EE698K::GUI::WC_MainWindow::cb_small(Fl_Menu_* o, void* v) {
  ((EE698K::GUI::WC_MainWindow*)(o->parent()))->cb_small_i(o,v);
}

void EE698K::GUI::WC_MainWindow::cb_medium_i(Fl_Menu_*, void*) {
  WMedium_cb();
}
void EE698K::GUI::WC_MainWindow::cb_medium(Fl_Menu_* o, void* v) {
  ((EE698K::GUI::WC_MainWindow*)(o->parent()))->cb_medium_i(o,v);
}

Fl_Menu_Item EE698K::GUI::WC_MainWindow::menu_[] = {
 {"&File", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"&Open", 0,  (Fl_Callback*)EE698K::GUI::WC_MainWindow::cb_Open, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"&Load Points", 0,  (Fl_Callback*)EE698K::GUI::WC_MainWindow::cb_Load, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"&Save Points", 0,  (Fl_Callback*)EE698K::GUI::WC_MainWindow::cb_Save, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"&Quit", 0,  (Fl_Callback*)EE698K::GUI::WC_MainWindow::cb_Quit, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"&Tools", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"&Inpaint", 0,  (Fl_Callback*)EE698K::GUI::WC_MainWindow::cb_Inpaint, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"&Brush Size", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"small", 0,  (Fl_Callback*)EE698K::GUI::WC_MainWindow::cb_small, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"medium", 0,  (Fl_Callback*)EE698K::GUI::WC_MainWindow::cb_medium, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0}
};
EE698K::GUI::WC_MainWindow::WC_MainWindow(int X, int Y, int W, int H, const char *L)
  : Fl_Double_Window(X, Y, W, H, L) {
  _WC_MainWindow();
}

EE698K::GUI::WC_MainWindow::WC_MainWindow(int W, int H, const char *L)
  : Fl_Double_Window(0, 0, W, H, L) {
  clear_flag(16);
  _WC_MainWindow();
}

EE698K::GUI::WC_MainWindow::WC_MainWindow()
  : Fl_Double_Window(0, 0, 800, 350, "EE698K : Assignment [14610]") {
  clear_flag(16);
  _WC_MainWindow();
}

void EE698K::GUI::WC_MainWindow::_WC_MainWindow() {
this->box(FL_BORDER_BOX);
this->color(FL_BACKGROUND_COLOR);
this->selection_color(FL_BACKGROUND_COLOR);
this->labeltype(FL_NO_LABEL);
this->labelfont(0);
this->labelsize(14);
this->labelcolor(FL_FOREGROUND_COLOR);
this->align(Fl_Align(FL_ALIGN_TOP));
this->when(FL_WHEN_RELEASE);
{ Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 0, 800, 25);
  o->window()->hotspot(o);
  o->menu(menu_);
} // Fl_Menu_Bar* o
{ wImageBox1 = new UI_DrawImageBox(25, 50, 360, 270);
  wImageBox1->box(FL_NO_BOX);
  wImageBox1->color(FL_BACKGROUND_COLOR);
  wImageBox1->selection_color(FL_BACKGROUND_COLOR);
  wImageBox1->labeltype(FL_NORMAL_LABEL);
  wImageBox1->labelfont(0);
  wImageBox1->labelsize(14);
  wImageBox1->labelcolor(FL_FOREGROUND_COLOR);
  wImageBox1->align(Fl_Align(FL_ALIGN_TOP));
  wImageBox1->when(FL_WHEN_RELEASE);
  wImageBox1->end();
} // UI_DrawImageBox* wImageBox1
{ wImageBox2 = new UI_ImageBox(415, 50, 360, 270);
  wImageBox2->box(FL_NO_BOX);
  wImageBox2->color(FL_BACKGROUND_COLOR);
  wImageBox2->selection_color(FL_BACKGROUND_COLOR);
  wImageBox2->labeltype(FL_NORMAL_LABEL);
  wImageBox2->labelfont(0);
  wImageBox2->labelsize(14);
  wImageBox2->labelcolor(FL_FOREGROUND_COLOR);
  wImageBox2->align(Fl_Align(FL_ALIGN_TOP));
  wImageBox2->when(FL_WHEN_RELEASE);
  wImageBox2->end();
} // UI_ImageBox* wImageBox2
end();
resizable(this);
}
